Challenge 1:
=========
Multiple inheritence in java:
============================
interface Example1{

default void show(){

System.out.println("Default method1");
}
}

interface Example2{
 default void show(){
System.out.println("Default Ex2");

}
}

class TestClass implements Example1,Example2{
public void show(){
Example1.super.show();
Example2.super.show();

}
public static void main(String args[]){
TestClass d=new TestClass();
d.show();
}
}

HashMap Program:
============
public class HashMapExample{
public static void main(String args[]){
HashMsp<Integer,String> map=new HashMap<Integer,String>();
map.put(1,"january");
map.put(2,"Apple");
map.put(3,"March");
for(Map.Entry m:map.entrySet()){
System.out.println(m.getKey()+""m.getValue());
}
}
}


Challenge3:
=========
@Test
public void getAlllRecords_Success() throws Exception{
List<PatientRecord> records=new ArrayList<>(Arrays.asList(RECORD_1,RECORD_2,RECORD_3));
Mockito.when(patientRecordRepository.findAll()).thenReturn(records);

mockMvc.perform(MockMvcRequestBuilders.get("/patient").andExpect(status().isOk());